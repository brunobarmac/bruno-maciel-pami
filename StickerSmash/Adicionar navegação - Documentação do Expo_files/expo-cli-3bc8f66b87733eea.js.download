try{!function(){var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{},n=(new e.Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]="b3d9b98a-56d5-4390-b92b-e90579995571",e._sentryDebugIdIdentifier="sentry-dbid-b3d9b98a-56d5-4390-b92b-e90579995571")}()}catch(e){}(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[93055],{7759:(e,n,s)=>{"use strict";s.a(e,async(e,i)=>{try{s.d(n,{A:()=>y});var t=s(37876),r=s(66028),o=s(97342),l=s(14232),d=s(34523),c=s(37683),a=s(96427),h=s(36981),x=s(44920),p=s(83508),j=s(50532),u=s(38938),m=s(71275),g=s(66907),f=e([d]);d=(f.then?(await f)():f)[0];let{X1:b}=h,y=e=>{let{dependencies:n=[],label:s,defaultPlatform:i,templateId:h,files:f,platforms:y,contentHidden:v,children:w}=e,E=(0,l.useRef)(null),[k,T]=(0,l.useState)(!1),S=(0,a.zs)();(0,l.useEffect)(()=>{T(!0)},[]);let O=()=>{let{version:e}=S;return"latest"===e?b:e},{language:_,value:I}=(0,d._Y)(w);return(0,t.jsxs)(j.Y,{className:"mb-3 flex flex-col prose-pre:!m-0 prose-pre:!border-0",children:[(0,t.jsx)(g.L,{title:s??"Example",Icon:r.SnackLogo,children:(0,t.jsxs)("form",{action:c.Z,method:"POST",target:"_blank",className:"contents",children:[(0,t.jsx)("input",{type:"hidden",name:"platform",value:i??"android"}),(0,t.jsx)("input",{type:"hidden",name:"name",value:s??"Example"}),(0,t.jsx)("input",{type:"hidden",name:"dependencies",value:n.join(",")}),(0,t.jsx)("input",{type:"hidden",name:"sdkVersion",value:(()=>{let e=O();return"unversioned"===e&&(e=b),e.replace("v","")})()}),y&&(0,t.jsx)("input",{type:"hidden",name:"supportedPlatforms",value:y.join(",")}),k&&(0,t.jsx)("input",{type:"hidden",name:"files",value:JSON.stringify((0,c.C)({templateId:h,code:I,files:f,baseURL:`${document.location.origin}/static/examples/${O()}`,codeLanguage:_}))}),(0,t.jsx)(x.e,{text:(0,d.e6)(I)}),(0,t.jsx)(u.g,{disabled:!k,rightSlot:(0,t.jsx)(o.ArrowUpRightIcon,{className:"icon-sm text-icon-secondary"}),className:"max-sm-gutters:gap-0 [&_p]:max-sm-gutters:hidden",type:"submit",children:(0,t.jsxs)("span",{className:"max-sm-gutters:hidden",children:[(0,t.jsx)("span",{className:"max-md-gutters:hidden",children:"Open in "}),"Snack"]})}),(0,t.jsx)(p.C,{})]})}),(0,t.jsx)(m.R,{ref:E,className:(0,r.mergeClasses)("p-0",v&&"hidden"),children:w})]})};i()}catch(e){i(e)}})},8900:(e,n,s)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/more/expo-cli",function(){return s(24833)}])},19002:(e,n,s)=>{"use strict";s.d(n,{B:()=>j});var i=s(37876),t=s(66028),r=s(97342),o=s(44527),l=s(25833),d=s(75298),c=s(50532),a=s(38938),h=s(71275),x=s(66907),p=s(44920);let j=e=>{let{cmd:n,cmdCopy:s,hideOverflow:r,className:l,title:d="Terminal",browserAction:a}=e;return(0,i.jsxs)(c.Y,{className:(0,t.mergeClasses)("terminal-snippet [li_&]:mt-4",l),children:[(0,i.jsxs)(x.L,{alwaysDark:!0,title:d,Icon:o.TerminalSquareIcon,children:[a&&(0,i.jsx)(m,{...a}),(0,i.jsx)(u,{cmd:n,cmdCopy:s})]}),(0,i.jsx)(h.R,{alwaysDark:!0,hideOverflow:r,className:"flex flex-col",children:n.map(g)})]})},u=e=>{let{cmd:n,cmdCopy:s}=e,t=s??function(e){let n=e.filter(e=>!e.startsWith("#")&&""!==e);if(1===n.length)return n[0].startsWith("$")?n[0].slice(2):n[0]}(n);return t?(0,i.jsx)(p.e,{alwaysDark:!0,text:t}):null},m=e=>{let{href:n,label:s}=e;return(0,i.jsx)(a.g,{alwaysDark:!0,className:"max-sm-gutters:gap-0 [&_p]:max-sm-gutters:hidden",rightSlot:(0,i.jsx)(r.ArrowUpRightIcon,{className:"icon-sm shrink-0 text-icon-secondary"}),onClick:()=>{window.open(n,"_blank","noopener,noreferrer")},children:s})};function g(e,n){let s=`line-${n}`;return""===e.trim()?(0,i.jsx)("br",{className:"select-none"},s):e.startsWith("#")?(0,i.jsx)(d.Sq,{className:"select-none whitespace-pre !border-none !bg-transparent !text-palette-gray10",children:e},s):e.startsWith("$")?(0,i.jsxs)("div",{className:"w-fit",children:[(0,i.jsx)(d.Sq,{className:"select-none whitespace-pre !border-none !bg-transparent !text-secondary",children:"-\xa0"}),(0,i.jsx)(d.Sq,{className:"whitespace-pre !border-none !bg-transparent text-default",dangerouslySetInnerHTML:{__html:l.Prism.highlight(e.slice(1).trim(),l.Prism.languages.bash,"bash")}})]},s):(0,i.jsx)(d.Sq,{className:"whitespace-pre !border-none !bg-transparent text-default",children:e},s)}},19618:(e,n,s)=>{"use strict";s.d(n,{b:()=>j});var i=s(37876),t=s(97342),r=s(12976),o=s(14232),l=s(27013),d=s(83508),c=s(50532),a=s(38938),h=s(71275),x=s(66907);let p=()=>Math.random().toString(36).slice(2,9),j=e=>{let{source:n,raw:s,filenameModifier:j=e=>e,filenameToLinkUrl:u,showOperation:m=!1,collapseDeletedFiles:g=!1,SnippetHeaderComponent:f=x.L}=e,[b,y]=(0,o.useState)(s?(0,l.FR)(s):null);return((0,o.useEffect)(()=>{n&&(async()=>{let e=await fetch(n),s=await e.text();y((0,l.FR)(s))})()},[n]),b)?(0,i.jsx)(i.Fragment,{children:b.map(e=>{let{oldRevision:n=p(),newRevision:s=p(),type:o,hunks:x,newPath:b,oldPath:y}=e;return 0===x.length?null:(0,i.jsxs)(c.Y,{children:[(0,i.jsxs)(f,{title:`${j("delete"===o?y:b)}`,Icon:r.Copy07Icon,operationType:o,showOperation:m,float:g&&"delete"===o,children:[b&&u&&"delete"!==o?(0,i.jsx)(a.g,{rightSlot:(0,i.jsx)(t.ArrowUpRightIcon,{className:"icon-sm shrink-0 text-icon-secondary"}),onClick:()=>{window.open(u(b),"_blank")},children:"Raw"}):null,(0,i.jsx)(d.C,{})]}),g&&"delete"===o?null:(0,i.jsx)(h.R,{className:"p-0",hideOverflow:!0,children:(0,i.jsx)(l.oO,{viewType:"unified",diffType:o,hunks:x,children:e=>e.map(e=>(0,i.jsx)(l.D9,{hunk:e},e.content))})})]},n+"-"+s)})}):null}},24833:(e,n,s)=>{"use strict";s.a(e,async(e,i)=>{try{s.r(n),s.d(n,{__N_SSG:()=>h,default:()=>p,headings:()=>u,meta:()=>j});var t=s(37876),r=s(91668),o=s(41711),l=s(65987),d=s(94275),c=s(15202),a=e([d]);d=(a.then?(await a)():a)[0];var h=!0;let j={modificationDate:"October 15, 2025",title:"Expo CLI",maxHeadingDepth:4,description:"The Expo CLI is a command-line tool that is the primary interface between a developer and other Expo tools."},u=[{depth:2,type:"text",title:"Highlights"},{depth:2,type:"text",title:"Installation"},{depth:2,type:"text",title:"Develop"},{depth:3,type:"text",title:"Launch target"},{depth:3,type:"text",title:"Server URL"},{depth:4,type:"text",title:"Tunneling"},{depth:4,type:"text",title:"Offline"},{depth:3,type:"text",title:".expo directory"},{depth:2,type:"text",title:"Building"},{depth:3,type:"text",title:"Compiling"},{depth:4,type:"text",title:"Compiling Android"},{depth:5,type:"inlineCode",title:"debug  variant"},{depth:5,type:"inlineCode",title:"debugOptimized  variant"},{depth:5,type:"inlineCode",title:"release  variant"},{depth:5,type:"text",title:"Debugging native Android project"},{depth:4,type:"text",title:"Compiling iOS"},{depth:3,type:"text",title:"Exporting"},{depth:4,type:"text",title:"Hosting with sub-paths"},{depth:3,type:"text",title:"Exporting with webpack"},{depth:2,type:"text",title:"Prebuild"},{depth:2,type:"text",title:"Lint"},{depth:2,type:"text",title:"Config"},{depth:3,type:"text",title:"Config type"},{depth:2,type:"text",title:"Install"},{depth:3,type:"text",title:"Version validation"},{depth:3,type:"text",title:"Configuring dependency validation"},{depth:3,type:"text",title:"Install package managers"},{depth:2,type:"text",title:"Authentication"},{depth:2,type:"text",title:"Customizing"},{depth:2,type:"text",title:"Environment Variables"},{depth:2,type:"text",title:"Telemetry"}];function x(e){let n={a:"a",blockquote:"blockquote",code:"code",del:"del",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",kbd:"kbd",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"expo"})," package provides a small and powerful CLI tool ",(0,t.jsx)(n.code,{children:"npx expo"})," which is designed to keep you moving fast during app development."]}),"\n",(0,t.jsx)(n.h2,{id:"highlights",children:"Highlights"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/more/expo-cli/#develop",children:"Start a server"})," for developing your app: ",(0,t.jsx)(n.code,{children:"npx expo start"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/more/expo-cli/#prebuild",children:"Generate the native Android and iOS directories"})," for your project: ",(0,t.jsx)(n.code,{children:"npx expo prebuild"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/more/expo-cli/#compiling",children:"Build and run"})," the native apps locally: ",(0,t.jsx)(n.code,{children:"npx expo run:ios"})," and ",(0,t.jsx)(n.code,{children:"npx expo run:android"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/more/expo-cli/#install",children:"Install and update packages"})," that work with the version of ",(0,t.jsx)(n.code,{children:"react-native"})," in your project: ",(0,t.jsx)(n.code,{children:"npx expo install package-name"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"npx expo"})," can be used with ",(0,t.jsx)(n.code,{children:"npx react-native"})," simultaneously."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To view a list of available commands in Expo CLI, run the following in your project:"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo -h"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["You can also run ",(0,t.jsx)(n.code,{children:"yarn expo -h"})," if you prefer to use yarn as the package manager."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The output should look something like below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"Usage\n  $ npx expo <command>\n\nCommands\n  start, export\n  run:ios, run:android, prebuild\n  install, customize, config\n  login, logout, whoami, register\n\nOptions\n  --version, -v   Version number\n  --help, -h      Usage info\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can run any command with the ",(0,t.jsx)(n.code,{children:"--help"})," or ",(0,t.jsx)(n.code,{children:"-h"})," flag to learn more about it:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo login -h"]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["Expo CLI is included in the ",(0,t.jsx)(n.code,{children:"expo"})," package. You can install it with npm or yarn:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ yarn add expo"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Projects that are not using ",(0,t.jsx)(n.a,{href:"/more/expo-cli/#prebuild",children:"Expo Prebuild"})," (also referred to as ",(0,t.jsx)(n.em,{children:"Bare projects"}),") will need to perform additional setup to ensure all custom Expo bundling features work: ",(0,t.jsx)(n.a,{href:"/../../../../../../../versions/latest/config/metro#bare-workflow-setup",children:"Metro: Bare workflow setup"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"develop",children:"Develop"}),"\n",(0,t.jsx)(n.p,{children:"Start a development server to work on your project by running:"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo start"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["You can also run ",(0,t.jsx)(n.code,{children:"npx expo"})," as an alias to ",(0,t.jsx)(n.code,{children:"npx expo start"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["This command starts a server on ",(0,t.jsx)(n.code,{children:"http://localhost:8081"})," that a client can use to interact with the bundler. The default bundler is ",(0,t.jsx)(n.a,{href:"https://metrobundler.dev/",children:"Metro"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The UI that shows up in the process is referred to as the ",(0,t.jsx)(n.strong,{children:"Terminal UI"}),". It contains a QR code (for the dev server URL) and a list of keyboard shortcuts you can press:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Keyboard shortcut"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"A"})}),(0,t.jsx)(n.td,{children:"Open the project on a connected Android device."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.kbd,{children:"Shift"})," + ",(0,t.jsx)(n.kbd,{children:"A"})]}),(0,t.jsx)(n.td,{children:"Select an Android device or emulator to open."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"I"})}),(0,t.jsx)(n.td,{children:"Open the project in an iOS Simulator."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.kbd,{children:"Shift"})," + ",(0,t.jsx)(n.kbd,{children:"I"})]}),(0,t.jsx)(n.td,{children:"Select an iOS Simulator to open."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"W"})}),(0,t.jsx)(n.td,{children:"Open the project in a web browser. This may require webpack to be installed in your project."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"R"})}),(0,t.jsx)(n.td,{children:"Reload the app on any connected device."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"S"})}),(0,t.jsx)(n.td,{children:"Switch the launch target between Expo Go and development builds."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"M"})}),(0,t.jsx)(n.td,{children:"Open the dev menu on any connected native device (web not supported)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.kbd,{children:"Shift"})," + ",(0,t.jsx)(n.kbd,{children:"M"})]}),(0,t.jsxs)(n.td,{children:["Choose more commands to trigger on connected devices.",(0,t.jsx)("br",{}),"This includes toggling the performance monitor, opening the element inspector, reloading the device, and opening the dev menu."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"J"})}),(0,t.jsxs)(n.td,{children:["Open React Native DevTools for any connected device that is using Hermes as the JavaScript engine. ",(0,t.jsx)(n.a,{href:"/../../../../../../../guides/using-hermes#javascript-inspector-for-hermes",children:"Learn more"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"O"})}),(0,t.jsxs)(n.td,{children:["Open project code in your editor. This can be configured with the ",(0,t.jsx)(n.code,{children:"EXPO_EDITOR"})," and ",(0,t.jsx)(n.code,{children:"EDITOR"})," ",(0,t.jsx)(n.a,{href:"/more/expo-cli/#environment-variables",children:"environment variables"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"E"})}),(0,t.jsx)(n.td,{children:"Show the development server URL as a QR code in the terminal."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.kbd,{children:"?"})}),(0,t.jsx)(n.td,{children:"Show all Terminal UI commands."})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"launch-target",children:"Launch target"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"npx expo start"})," command automatically launches the app in a development build if ",(0,t.jsx)(n.code,{children:"expo-dev-client"})," is installed in the project. Otherwise, it launches the app in Expo Go."]}),"\n",(0,t.jsx)(n.p,{children:"Alternatively, you can force the launch target by passing the following flags to the command:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--dev-client"}),": Always launch the app in a development build."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--go"}),": Always launch the app in Expo Go."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You can also switch the launch target during runtime by pressing ",(0,t.jsx)(n.kbd,{children:"S"})," in the ",(0,t.jsx)(n.strong,{children:"Terminal UI"}),". The ",(0,t.jsx)(n.code,{children:"run"})," commands also use ",(0,t.jsx)(n.code,{children:"--dev-client"})," after compiling the development build, by default."]}),"\n",(0,t.jsx)(n.h3,{id:"server-url",children:"Server URL"}),"\n",(0,t.jsxs)(n.p,{children:["By default, the project is served over a LAN connection. You can change this behavior to localhost-only by using the flag ",(0,t.jsx)(n.code,{children:"npx expo start --localhost"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Other available options are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--port"}),": Port to start the dev server on (does not apply to webpack or ",(0,t.jsx)(n.a,{href:"/more/expo-cli/#tunneling",children:"tunnel URLs"}),"). Use ",(0,t.jsx)(n.code,{children:"--port 0"})," to automatically use the first available port. Default: ",(0,t.jsx)(n.strong,{children:"8081"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--https"}),": ",(0,t.jsxs)(n.strong,{children:["(Deprecated in favor of ",(0,t.jsx)(n.code,{children:"--tunnel"}),")"]})," Start the dev server using a secure origin. This is currently only supported on web."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You can force the URL to be any value with the ",(0,t.jsx)(n.code,{children:"EXPO_PACKAGER_PROXY_URL"})," environment variable. For example:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ export EXPO_PACKAGER_PROXY_URL=http://expo.dev","$ npx expo start"]}),"\n",(0,t.jsxs)(n.p,{children:["Will open apps to: ",(0,t.jsx)(n.code,{children:"exp://expo.dev:80"})," (the ",(0,t.jsx)(n.code,{children:":80"})," is a temporary workaround for Android WebSockets)."]}),"\n",(0,t.jsx)(n.h4,{id:"tunneling",children:"Tunneling"}),"\n",(0,t.jsx)(n.p,{children:"Restrictive network conditions (common for public Wi-Fi), firewalls (common for Windows users), or Emulator misconfiguration can make it difficult to connect a remote device to your dev server over lan/localhost."}),"\n",(0,t.jsxs)(n.p,{children:["Sometimes it's easier to connect to a dev server over a proxy URL that's accessible from any device with internet access, this is referred to as ",(0,t.jsx)(n.strong,{children:"tunneling"}),". ",(0,t.jsx)(n.code,{children:"npx expo start"})," provides built-in support for ",(0,t.jsx)(n.strong,{children:"tunneling"})," via ",(0,t.jsx)(n.a,{href:"https://ngrok.com",children:"ngrok"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["To enable tunneling, first install ",(0,t.jsx)(n.code,{children:"@expo/ngrok"}),":"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npm i -g @expo/ngrok"]}),"\n",(0,t.jsxs)(n.p,{children:["Then run the following to start your dev server from a ",(0,t.jsx)(n.em,{children:"tunnel"})," URL:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo start --tunnel"]}),"\n",(0,t.jsxs)(n.p,{children:["This will serve your app from a public URL like: ",(0,t.jsx)(n.code,{children:"https://xxxxxxx.bacon.19000.exp.direct:80"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"EXPO_TUNNEL_SUBDOMAIN"})," environment variable to experimentally set the subdomain for the tunnel URL. This is useful for testing universal links on iOS. This may cause unexpected issues with ",(0,t.jsx)(n.code,{children:"expo-linking"})," and Expo Go. Select the exact subdomain to use by passing a ",(0,t.jsx)(n.code,{children:"string"})," value that is not one of: ",(0,t.jsx)(n.code,{children:"true"}),", ",(0,t.jsx)(n.code,{children:"false"}),", ",(0,t.jsx)(n.code,{children:"1"}),", ",(0,t.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Drawbacks"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Tunneling is slower than local connections because requests must be forwarded to a public URL."}),"\n",(0,t.jsxs)(n.li,{children:["Tunnel URLs are public and can be accessed by any device with a network connection. Expo CLI mitigates the risk of exposure by adding entropy to the beginning of the URL. Entropy can be reset by clearing the ",(0,t.jsx)(n.strong,{children:".expo"})," directory in your project."]}),"\n",(0,t.jsxs)(n.li,{children:["Tunnels require a network connection on both devices, meaning this feature cannot be used with the ",(0,t.jsx)(n.code,{children:"--offline"})," flag."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Tunneling requires a third-party hosting service, this means it may sometimes experience intermittent issues like ",(0,t.jsx)(n.code,{children:"ngrok tunnel took too long to connect"})," or ",(0,t.jsx)(n.code,{children:"Tunnel connection has been closed. This is often related to intermittent connection problems with the Ngrok servers..."}),". Be sure to check for ",(0,t.jsx)(n.a,{href:"https://status.ngrok.com/",children:"Ngrok outages"})," before reporting an issue. Some Windows users have also reported needing to modify their antivirus settings to allow Ngrok to work correctly."]}),"\n",(0,t.jsx)(n.h4,{id:"offline",children:"Offline"}),"\n",(0,t.jsxs)(n.p,{children:["You can develop without a network connection by using the ",(0,t.jsx)(n.code,{children:"--offline"})," flag:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo start --offline"]}),"\n",(0,t.jsx)(n.p,{children:"Offline will prevent the CLI from making network requests. If you don't use the flag and your computer has no internet connection, then offline support will automatically be enabled, it will just take a bit longer to verify the reachability."}),"\n",(0,t.jsx)(n.p,{children:"Expo CLI makes network requests to sign manifests with your user credentials to ensure sensitive information is sandboxed in reusable runtimes like Expo Go."}),"\n",(0,t.jsx)(n.h3,{id:"expo-directory",children:".expo directory"}),"\n",(0,t.jsxs)(n.p,{children:["When you start the development server in a project for the first time, a ",(0,t.jsx)(n.strong,{children:".expo"})," directory is created at the root of that project. It contains two files:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"devices.json"}),": Contains information about devices that have opened this project recently."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"settings.json"}),": Contains information about server configuration that is used to serve the project's manifest."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Both of these files have information that is specific to your local computer. This is the reason why ",(0,t.jsx)(n.strong,{children:".expo"})," directory is included in the ",(0,t.jsx)(n.strong,{children:".gitignore"})," file, by default, when a new project is created. It is not meant to be shared with other developers."]}),"\n",(0,t.jsx)(n.h2,{id:"building",children:"Building"}),"\n",(0,t.jsxs)(n.p,{children:["A React Native app consists of two parts: a native runtime (",(0,t.jsx)(n.a,{href:"/more/expo-cli/#compiling",children:"compiling"}),"), and static files like JavaScript bundles and assets (",(0,t.jsx)(n.a,{href:"/more/expo-cli/#exporting",children:"exporting"}),"). Expo CLI provides commands for performing both tasks."]}),"\n",(0,t.jsx)(n.h3,{id:"compiling",children:"Compiling"}),"\n",(0,t.jsxs)(n.p,{children:["You can compile your app locally with the ",(0,t.jsx)(n.code,{children:"run"})," commands:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["# Build for iOS","$ npx expo run:ios","# Build for Android","$ npx expo run:android"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Highlights"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Build directly on connected devices with no global side effects using the ",(0,t.jsx)(n.code,{children:"--device"})," flag. Supports locked devices, letting you retry instantly instead of needing to rebuild."]}),"\n",(0,t.jsx)(n.li,{children:"Automatically codesign iOS apps for development from the CLI without having to open Xcode."}),"\n",(0,t.jsx)(n.li,{children:"Smart log parsing shows warnings and errors from your project source code, unlike Xcode which surfaces hundreds of benign warnings from your node modules."}),"\n",(0,t.jsx)(n.li,{children:"Fatal errors causing your app to crash will be surfaced in the terminal preventing the need to reproduce in Xcode."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"npx expo run:ios"})," can only be run on a Mac, and Xcode must be installed. You can build the app in the cloud from any computer using ",(0,t.jsx)(n.code,{children:"eas build -p ios"}),". Similarly, ",(0,t.jsx)(n.code,{children:"npx expo run:android"})," requires Android Studio and Java to be installed and configured on your computer."]}),"\n",(0,t.jsxs)(n.p,{children:["Building locally is useful for developing native modules and ",(0,t.jsx)(n.a,{href:"/../../../../../../../debugging/runtime-issues/#native-debugging",children:"debugging complex native issues"}),". Building remotely with ",(0,t.jsx)(n.code,{children:"eas build"})," is a much more resilient option due to the pre-configured cloud environment."]}),"\n",(0,t.jsxs)(n.p,{children:["If your project does not have the corresponding native directories, the ",(0,t.jsx)(n.code,{children:"npx expo prebuild"})," command will run once to generate the respective directory before building."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, if your project does not have an ",(0,t.jsx)(n.strong,{children:"ios"})," directory in the root of your project, then ",(0,t.jsx)(n.code,{children:"npx expo run:ios"})," will first run ",(0,t.jsx)(n.code,{children:"npx expo prebuild -p ios"})," before compiling your app. For more information on this process, see ",(0,t.jsx)(n.a,{href:"/../../../../../../../workflow/prebuild",children:"Expo Prebuild"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cross-platform arguments"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--no-build-cache"}),": Clear the native cache before building. On iOS, this is the ",(0,t.jsx)(n.strong,{children:"derived data"})," directory. Cache clearing is useful for profiling your build times."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--no-install"}),": Skip installing dependencies. On iOS, this will also skip running ",(0,t.jsx)(n.code,{children:"npx pod-install"})," if the ",(0,t.jsx)(n.code,{children:"dependencies"})," field in the project's ",(0,t.jsx)(n.code,{children:"package.json"})," has changed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--no-bundler"}),": Skip starting the dev server. Enabled automatically if the dev server is already serving the app from a different process."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-d, --device [device]"}),": Device name or ID to build the app on. You can pass ",(0,t.jsx)(n.code,{children:"--device"})," without arguments to select a device from a list of available options. This supports connected devices as well as virtual devices."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-p, --port <port>"}),": Port to start the development server. ",(0,t.jsx)(n.strong,{children:"Default: 8081"}),". This is only relevant for development builds. Production builds will ",(0,t.jsx)(n.a,{href:"/more/expo-cli/#exporting",children:"export"})," the project and embed the files in the native binary before installing them on a device."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--binary <path>"}),": File path to the binary to install on the device. When this is provided, the build process will be skipped and the binary will attempt to be installed directly. If the binary was not built for the correct device, for example, it is built for the simulator or installed on the device, then the command will fail."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"compiling-android",children:"Compiling Android"}),"\n",(0,t.jsxs)(n.p,{children:["Android apps can have multiple different ",(0,t.jsx)(n.strong,{children:"variants"})," which are defined in the project's ",(0,t.jsx)(n.code,{children:"build.gradle"})," file. Variants can be selected with the ",(0,t.jsx)(n.code,{children:"--variant"})," flag:"]}),"\n",(0,t.jsxs)(n.h5,{id:"debug-variant",children:[(0,t.jsx)(n.code,{children:"debug"})," variant"]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"debug"})," variant for a debug build:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo run:android --variant debug"]}),"\n",(0,t.jsxs)(n.h5,{id:"debugoptimized-variant",children:[(0,t.jsx)(n.code,{children:"debugOptimized"})," variant"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"important"})," ",(0,t.jsx)(n.code,{children:"debugOptimized"})," is available in SDK 54 and later."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"debugOptimized"})," variant for faster development with performance close to release builds while keeping the overall build in a debug-friendly mode:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo run:android --variant debugOptimized"]}),"\n",(0,t.jsx)(n.p,{children:"When using this variant, keep the following in mind:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Optimizes C++ libraries as in release builds, improving runtime performance"}),"\n",(0,t.jsxs)(n.li,{children:["In EAS Build, use a matching Gradle command like ",(0,t.jsxs)(n.a,{href:"/../../../../../../../build-reference/apk/#configuring-a-profile-to-build-apks",children:[(0,t.jsx)(n.code,{children:":app:assembleDebugOptimized"})," in ",(0,t.jsx)(n.strong,{children:"eas.json"})]})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Limitation"}),": C++ debugging is disabled and C++ crashes may have less readable stack traces"]}),"\n"]}),"\n",(0,t.jsxs)(n.h5,{id:"release-variant",children:[(0,t.jsx)(n.code,{children:"release"})," variant"]}),"\n",(0,t.jsx)(n.p,{children:"You can compile the Android app for production by running:"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo run:android --variant release"]}),"\n",(0,t.jsxs)(n.p,{children:["This build is not automatically code-signed for submission to the Google Play Store. This command should be used to test bugs that may only show up in production builds. To generate a production build that is code signed for the Play Store, we recommend using ",(0,t.jsx)(n.a,{href:"/../../../../../../../build/introduction",children:"EAS Build"}),"."]}),"\n",(0,t.jsx)(n.h5,{id:"debugging-native-android-project",children:"Debugging native Android project"}),"\n",(0,t.jsxs)(n.p,{children:["You can debug the native Android project using native debugging tools by opening the ",(0,t.jsx)(n.strong,{children:"android"})," directory in Android Studio:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ open -a /Applications/Android Studio.app android"]}),"\n",(0,t.jsxs)(n.p,{children:["If you have a customized Android project using different product flavors, you can configure both the flavor and application ID using the ",(0,t.jsx)(n.code,{children:"--variant"})," and ",(0,t.jsx)(n.code,{children:"--app-id"})," flags:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo run:android --variant freeDebug --app-id dev.expo.myapp.free"]}),"\n",(0,t.jsxs)(n.p,{children:["For more information, see the ",(0,t.jsx)(n.a,{href:"/../../../../../../../guides/local-app-development/#local-builds-using-android-product-flavors",children:"Local builds using Android product flavors"})," guide."]}),"\n",(0,t.jsx)(n.h4,{id:"compiling-ios",children:"Compiling iOS"}),"\n",(0,t.jsxs)(n.p,{children:["An iOS app can have multiple ",(0,t.jsx)(n.strong,{children:"schemes"})," for representing different sub-apps like App Clips, watchOS apps, Safari Extensions, and so on. By default, ",(0,t.jsx)(n.code,{children:"npx expo run:ios"})," will choose the scheme for your iOS app. You can pick a custom scheme with the ",(0,t.jsx)(n.code,{children:"--scheme <my-scheme>"})," argument. If you pass in the ",(0,t.jsx)(n.code,{children:"--scheme"})," argument alone, then Expo CLI will prompt you to choose a scheme from the list of available options in your Xcode project."]}),"\n",(0,t.jsxs)(n.p,{children:["The scheme you select will filter out which ",(0,t.jsx)(n.code,{children:"--device"})," options show up in the selection prompt, for example, selecting an Apple TV scheme will only show available Apple TV devices."]}),"\n",(0,t.jsx)(n.p,{children:"You can compile an iOS app for production by running:"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo run:ios --configuration Release"]}),"\n",(0,t.jsxs)(n.p,{children:["This build is not automatically code signed for submission to the Apple App Store. ",(0,t.jsx)(n.code,{children:"npx expo run:ios"})," should mostly be used to test bugs that only show up in production builds. Native code signing requires several network requests and is prone to many different types of errors from the Apple servers. To generate a production build that is code signed for the App Store, we recommend using ",(0,t.jsx)(n.a,{href:"/../../../../../../../build/introduction",children:"EAS Build"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"When you compile your app onto a Simulator, the Simulator's native error logs will be piped to the Expo CLI process in the terminal. This is useful for quickly seeing bugs that may cause a fatal error. For example, missing permission messages. Error piping is not available for physical iOS devices."}),"\n",(0,t.jsxs)(n.p,{children:["You can debug using ",(0,t.jsx)(n.code,{children:"lldb"})," and all of the native Apple debugging tools by opening the project in Xcode and rebuilding from Xcode:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ xed ios"]}),"\n",(0,t.jsxs)(n.p,{children:["Building from Xcode is useful because you can set native breakpoints and profile any part of the application. Be sure to track changes in source control (git) in case you need to regenerate the native app with ",(0,t.jsx)(n.code,{children:"npx expo prebuild -p ios --clean"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"iOS development signing"})}),"\n",(0,t.jsxs)(n.p,{children:["If you want to see how your app will run on your device, all you have to do is connect it, run ",(0,t.jsx)(n.code,{children:"npx expo run:ios --device"}),", and select your connected device."]}),"\n",(0,t.jsx)(n.p,{children:"Expo CLI will automatically sign the device for development, install the app, and launch it."}),"\n",(0,t.jsxs)(n.p,{children:["If you don't have any developer profiles setup on your computer then you'll need to set them up manually outside of Expo CLI by following this guide: ",(0,t.jsx)(n.a,{href:"https://expo.fyi/setup-xcode-signing",children:"Setup Xcode signing"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"exporting",children:"Exporting"}),"\n",(0,t.jsx)(n.p,{children:"You can export the JavaScript and assets for your app using Metro bundler by running:"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo export"]}),"\n",(0,t.jsxs)(n.p,{children:["This is done automatically when using ",(0,t.jsx)(n.code,{children:"eas update"})," or when compiling the native runtime. The ",(0,t.jsx)(n.code,{children:"export"})," command works similar to most web frameworks:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A bundler transpiles and bundles your application code for ",(0,t.jsx)(n.strong,{children:"production"})," environments, stripping all code guarded by the ",(0,t.jsx)(n.code,{children:"__DEV__"})," boolean."]}),"\n",(0,t.jsxs)(n.li,{children:["All static files are copied into a static ",(0,t.jsx)(n.strong,{children:"dist"})," directory which can be served from a static host."]}),"\n",(0,t.jsxs)(n.li,{children:["Contents of the ",(0,t.jsx)(n.strong,{children:"public"})," directory are copied into the ",(0,t.jsx)(n.strong,{children:"dist"})," directory as-is."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The following options are provided:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--platform <platform>"}),": Choose the platform to compile for: 'ios', 'android', 'all'. ",(0,t.jsx)(n.strong,{children:"Default: all"}),". 'web' is also available if configured in the app config. For more information, see ",(0,t.jsx)(n.a,{href:"/../../../../../../../guides/customizing-metro",children:"Customizing Metro"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--dev"}),": Bundle for ",(0,t.jsx)(n.strong,{children:"development"})," environments without minifying code or stripping the ",(0,t.jsx)(n.code,{children:"__DEV__"})," boolean."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--output-dir <dir>"}),": The directory to export the static files to. ",(0,t.jsx)(n.strong,{children:"Default: dist"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--max-workers <number>"}),": Maximum number of tasks to allow the bundler to spawn. Setting this to ",(0,t.jsx)(n.code,{children:"0"})," will run all transpilation on the same process, meaning you can easily debug Babel transpilation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-c, --clear"}),": Clear the bundler cache before exporting."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--no-minify"}),": Skip minifying JavaScript and CSS assets."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--no-bytecode"}),": Skip generating Hermes bytecode for native platforms. Only use this for analyzing bundle sizes and never ship UTF-8 bundles to native platforms as this will lead to drastically longer startup times."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--no-ssg"}),": Skip exporting static HTML files for web routes. This option only generates server code inside the ",(0,t.jsx)(n.strong,{children:"dist"})," directory. Useful for ",(0,t.jsx)(n.a,{href:"/../../../../../../../router/reference/api-routes",children:"API routes"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"hosting-with-sub-paths",children:"Hosting with sub-paths"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"important"})," Experimental functionality."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["You can configure the prefix for static assets by setting the ",(0,t.jsx)(n.code,{children:"experiments.baseUrl"})," field in your ",(0,t.jsx)(n.a,{href:"/../../../../../../../workflow/configuration",children:"app config"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'@@@app.json@@@{\n  "expo": {\n    "experiments": {\n      "baseUrl": "/my-root"\n    }\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This will export the website with all resources prefixed with ",(0,t.jsx)(n.code,{children:"/my-root"}),". For example, an image at ",(0,t.jsx)(n.code,{children:"assets/image.png"})," will be expected to be hosted at ",(0,t.jsx)(n.strong,{children:"/my-root/assets/image.png"}),". The actual file will be located in the same file system location as the entire directory is expected to be hosted at ",(0,t.jsx)(n.code,{children:"/my-root"})," on the server."]}),"\n",(0,t.jsxs)(n.p,{children:["Expo Router has built-in support for ",(0,t.jsx)(n.code,{children:"baseUrl"}),". When using the ",(0,t.jsx)(n.code,{children:"Link"})," and ",(0,t.jsx)(n.code,{children:"router"})," APIs, the ",(0,t.jsx)(n.code,{children:"baseUrl"})," will be automatically prepended to the URL."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"@@@app/blog/index.tsx@@@import { Link } from 'expo-router';\n\nexport default function Blog() {\n  return <Link href=\"/blog/123\">Go to blog post</Link>;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This will ",(0,t.jsx)(n.strong,{children:"export"})," to the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'@@@Output HTML@@@<a href="/my-root/blog/123">Go to blog post</a>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["If you use ",(0,t.jsx)(n.code,{children:"<a>"}),", React Navigation, or the ",(0,t.jsx)(n.code,{children:"Linking"})," API directly, you'll need to manually prepend the ",(0,t.jsx)(n.code,{children:"baseUrl"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"baseUrl"})," functionality is production-only and must be set before exporting the website. If you change the value, you must re-export the website."]}),"\n",(0,t.jsxs)(n.p,{children:["Images and other assets will work automatically if you ",(0,t.jsx)(n.code,{children:"require"})," or ",(0,t.jsx)(n.code,{children:"import"})," them. If you directly reference a resource URL then you will need to append the ",(0,t.jsx)(n.strong,{children:"baseUrl"})," manually."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"@@@app/index.tsx@@@import { Image } from 'expo-image';\n\nexport default function Blog() {\n  return <Image source={require('@/assets/image.png')} />;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This will ",(0,t.jsx)(n.strong,{children:"export"})," to the following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'@@@Output HTML@@@<img src="/my-root/assets/assets/image.png" />\n'})}),"\n",(0,t.jsx)(n.p,{children:"Manually passing a URL will need to be manually prefixed:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'@@@app/index.tsx@@@export default function Blog() {\n  return <img src="/my-root/assets/image.png" />;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"exporting-with-webpack",children:"Exporting with webpack"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"warning"})," ",(0,t.jsx)(n.strong,{children:"Deprecated"}),": In SDK 50 and later, Expo Webpack has been deprecated in favor of universal Metro (",(0,t.jsx)(n.code,{children:"npx expo export"}),"). Learn more in ",(0,t.jsx)(n.a,{href:"/../../../../../../../router/migrate/from-expo-webpack",children:"migrating from Webpack to Expo Router"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You can export the JavaScript and assets for your web app using webpack by running the following:"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo export:web"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--dev"}),": Bundle in 'development' mode without minifying code or stripping the ",(0,t.jsx)(n.code,{children:"__DEV__"})," boolean."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-c, --clear"}),": Clear the bundler cache before exporting."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["This command will be disabled if your project is configured to use ",(0,t.jsx)(n.code,{children:"metro"})," for bundling web projects in the ",(0,t.jsx)(n.code,{children:"app.json"})," via the ",(0,t.jsx)(n.code,{children:"expo.web.bundler: 'metro'"})," field."]}),"\n",(0,t.jsx)(n.h2,{id:"prebuild",children:"Prebuild"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo prebuild"]}),"\n",(0,t.jsxs)(n.p,{children:["Native source code must be generated before a native app can compile. Expo CLI provides a unique and powerful system called ",(0,t.jsx)(n.em,{children:"prebuild"}),", that generates the native code for your project. To learn more, read the ",(0,t.jsx)(n.a,{href:"/../../../../../../../workflow/prebuild",children:"Expo Prebuild docs"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"lint",children:"Lint"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo lint"]}),"\n",(0,t.jsxs)(n.p,{children:["Linting helps enforce best practices and ensure your code is consistent. The ",(0,t.jsx)(n.code,{children:"npx expo lint"})," command will set up ESLint with Expo-specific settings and run the ",(0,t.jsx)(n.code,{children:"npx eslint"})," command with options that are optimized for the Expo framework. By running ",(0,t.jsx)(n.code,{children:"npx expo lint --fix"}),", linting issues can be fixed automatically."]}),"\n",(0,t.jsxs)(n.p,{children:["Running ",(0,t.jsx)(n.code,{children:"npx expo lint"})," targets all files in the ",(0,t.jsx)(n.strong,{children:"src"}),", ",(0,t.jsx)(n.strong,{children:"app"}),", and ",(0,t.jsx)(n.strong,{children:"components"})," directories by default. You can also pass custom files or directories to the lint command as arguments. For example:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo lint ./utils constants.ts"]}),"\n",(0,t.jsxs)(n.p,{children:["All files matching ",(0,t.jsx)(n.code,{children:".js, .jsx, .ts, .tsx, .mjs, .cjs"})," extensions will be linted by default. You can customize the extensions by passing the ",(0,t.jsx)(n.code,{children:"--ext"})," flag. For example, to lint only ",(0,t.jsx)(n.code,{children:".ts"})," and ",(0,t.jsx)(n.code,{children:".tsx"})," files, you can use the ",(0,t.jsx)(n.code,{children:"--ext"})," option: ",(0,t.jsx)(n.code,{children:"npx expo lint --ext .ts,.tsx"})," or ",(0,t.jsx)(n.code,{children:"npx expo lint --ext .js --tsx .tsx"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If you need additional customization, you can pass extra arguments using the ",(0,t.jsx)(n.code,{children:"--"})," operator. For example, to pass the ",(0,t.jsx)(n.code,{children:"--no-error-on-unmatched-pattern"})," flag to ESLint, you can run:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo lint -- --no-error-on-unmatched-pattern"]}),"\n",(0,t.jsxs)(n.p,{children:["If you need more customization, you can use ",(0,t.jsx)(n.code,{children:"npx eslint"})," directly."]}),"\n",(0,t.jsx)(l.u,{title:"Using ESLint",description:"Learn more about ensuring best practices with ESLint in an Expo project.",href:"/guides/using-eslint",Icon:o.BookOpen02Icon}),"\n",(0,t.jsx)(n.h2,{id:"config",children:"Config"}),"\n",(0,t.jsxs)(n.p,{children:["Evaluate the app config (",(0,t.jsx)(n.strong,{children:"app.json"}),", or ",(0,t.jsx)(n.strong,{children:"app.config.js"}),") by running:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo config"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--full"}),": Include all project config data."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--json"}),": Output in JSON format, useful for converting an ",(0,t.jsx)(n.strong,{children:"app.config.js"})," to an ",(0,t.jsx)(n.strong,{children:"app.config.json"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"-t, --type"}),": ",(0,t.jsx)(n.a,{href:"/more/expo-cli/#config-type",children:"Type of config"})," to show."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"config-type",children:"Config type"}),"\n",(0,t.jsx)(n.p,{children:"There are three different config types that are generated from the app config:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"public"}),": The manifest file to use with OTA updates. Think of this like an ",(0,t.jsx)(n.code,{children:"index.html"})," file's ",(0,t.jsx)(n.code,{children:"<head />"})," element but for native apps."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"prebuild"}),": The config that is used for ",(0,t.jsx)(n.a,{href:"/../../../../../../../workflow/prebuild",children:"Expo Prebuild"})," including async modifiers. This is the only time the config is not serializable."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"introspect"}),": A subset of the ",(0,t.jsx)(n.code,{children:"prebuild"})," config that only shows in-memory modifications like ",(0,t.jsx)(n.code,{children:"Info.plist"})," or ",(0,t.jsx)(n.strong,{children:"AndroidManifest.xml"})," changes. Learn more about ",(0,t.jsx)(n.a,{href:"/../../../../../../../config-plugins/development-and-debugging/#introspection",children:"introspection"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,t.jsxs)(n.p,{children:["Unlike the web, React Native is not backwards compatible. This means that npm packages often need to be the exact right version for the currently installed copy of ",(0,t.jsx)(n.code,{children:"react-native"})," in your project. Expo CLI provides a best-effort tool for doing this using a list of popular packages and the known working version combinations. Simply use the ",(0,t.jsx)(n.code,{children:"install"})," command as a drop-in replacement for ",(0,t.jsx)(n.code,{children:"npm install"}),":"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo install expo-camera"]}),"\n",(0,t.jsx)(n.p,{children:"Running a single instance of this command, you can also install multiple packages:"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo install typescript expo-sms"]}),"\n",(0,t.jsxs)(n.p,{children:["You can directly pass arguments to the underlying package manager by using the ",(0,t.jsx)(n.code,{children:"--"})," operator:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ yarn expo install typescript -- -D","# yarn add typescript -D"],cmdCopy:"yarn expo install typescript -- -D"}),"\n",(0,t.jsx)(n.h3,{id:"version-validation",children:"Version validation"}),"\n",(0,t.jsxs)(n.p,{children:["You can perform validation and correction with the ",(0,t.jsx)(n.code,{children:"--check"})," and ",(0,t.jsx)(n.code,{children:"--fix"})," flags:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--check"}),": Check which installed packages need to be updated."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--fix"}),": Automatically update any invalid package versions."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(d.BK,{cmd:["# Check all packages for incorrect versions, prompt to fix locally","$ npx expo install --check"],cmdCopy:"npx expo install --check"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"npx expo install --check"})," prompts you about packages that are installed incorrectly. It also prompts about installing these packages to their compatible versions locally. It exits with non-zero in Continuous Integration (CI). This means you can use this to do continuous immutable validation. In contrast, ",(0,t.jsx)(n.code,{children:"npx expo install --fix"})," will always fix packages if needed, regardless of the environment."]}),"\n",(0,t.jsx)(n.p,{children:"You can validate specific packages by passing them:"}),"\n",(0,t.jsx)(d.BK,{cmd:["# Check only react-native and expo-sms","$ npx expo install react-native expo-sms --check"],cmdCopy:"npx expo install react-native expo-sms --check"}),"\n",(0,t.jsxs)(n.p,{children:["The command ",(0,t.jsx)(n.code,{children:"npx expo install expo-camera"})," and ",(0,t.jsx)(n.code,{children:"npx expo install expo-camera --fix"})," serve the same purpose, the ",(0,t.jsx)(n.code,{children:"--fix"})," command is useful for upgrading all packages in your project like:"]}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo install --fix"]}),"\n",(0,t.jsx)(n.h3,{id:"configuring-dependency-validation",children:"Configuring dependency validation"}),"\n",(0,t.jsxs)(n.p,{children:["There may be circumstances where you want to use a version of a package that is different from the version recommended by ",(0,t.jsx)(n.code,{children:"npx expo install"}),". In this case, you can exclude specific packages from version checking by using the ",(0,t.jsx)(n.a,{href:"/../../../../../../../versions/latest/config/package-json/#exclude",children:(0,t.jsx)(n.code,{children:"expo.install.exclude"})})," property in your project's ",(0,t.jsx)(n.strong,{children:"package.json"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"install-package-managers",children:"Install package managers"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"npx expo install"})," has support for ",(0,t.jsx)(n.code,{children:"bun"}),", ",(0,t.jsx)(n.code,{children:"npm"}),", ",(0,t.jsx)(n.code,{children:"pnpm"}),", and ",(0,t.jsx)(n.code,{children:"yarn"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"You can force the package manager using a named argument:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--bun"}),": Use ",(0,t.jsx)(n.code,{children:"bun"})," to install dependencies. Default when ",(0,t.jsx)(n.strong,{children:"bun.lockb"})," or ",(0,t.jsx)(n.strong,{children:"bun.lock"})," exists."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--npm"}),": Use ",(0,t.jsx)(n.code,{children:"npm"})," to install dependencies. Default when ",(0,t.jsx)(n.strong,{children:"package-lock.json"})," exists."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--pnpm"}),": Use ",(0,t.jsx)(n.code,{children:"pnpm"})," to install dependencies. Default when ",(0,t.jsx)(n.strong,{children:"pnpm-lock.yaml"})," exists."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"--yarn"}),": Use ",(0,t.jsx)(n.code,{children:"yarn"})," to install dependencies. Default when ",(0,t.jsx)(n.strong,{children:"yarn.lock"})," exists."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,t.jsxs)(n.p,{children:["Expo CLI provides authentication methods to use with the ",(0,t.jsx)(n.code,{children:"npx expo start"}),' command. Authentication is used to "code sign" manifests for secure OTA usage. Think of this like HTTPS on the web.']}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Register an account with ",(0,t.jsx)(n.code,{children:"npx expo register"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Login to your account with ",(0,t.jsx)(n.code,{children:"npx expo login"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Check which account is currently authenticated with ",(0,t.jsx)(n.code,{children:"npx expo whoami"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Logout with ",(0,t.jsx)(n.code,{children:"npx expo logout"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These credentials are shared across Expo CLI and EAS CLI."}),"\n",(0,t.jsx)(n.h2,{id:"customizing",children:"Customizing"}),"\n",(0,t.jsx)(n.p,{children:"Sometimes you may want to customize a project file that would otherwise be generated in memory by Expo CLI. When utilizing tools other than Expo CLI, you'll need to have the default config files present, otherwise your app may not work as expected. You can generate files by running:"}),"\n",(0,t.jsx)(d.BK,{cmd:["$ npx expo customize"]}),"\n",(0,t.jsx)(n.p,{children:"From here, you can choose to generate basic project files like:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"babel.config.js"})," -- The Babel configuration. This is required to be present if you plan to use tooling other than Expo CLI to bundle your project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"webpack.config.js"})," -- The default webpack config for web development."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"metro.config.js"})," -- The default Metro config for universal development. This is required for usage with ",(0,t.jsx)(n.code,{children:"npx react-native"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tsconfig.json"})," -- Create a TypeScript config file and install the required dependencies."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"HTTP_PROXY"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"string"})}),(0,t.jsxs)(n.td,{children:["HTTP/HTTPS proxy URL to connect for all network requests. Configures ",(0,t.jsx)(n.a,{href:"https://github.com/nodejs/undici/blob/main/docs/docs/api/EnvHttpProxyAgent.md",children:"Undici EnvHttpProxyAgent"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_WEB_SETUP"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Prevents the CLI from forcing web dependencies (",(0,t.jsx)(n.code,{children:"react-dom"}),", ",(0,t.jsx)(n.code,{children:"react-native-web"}),", ",(0,t.jsx)(n.code,{children:"@expo/webpack-config"}),") to be installed before using web functionality.",(0,t.jsx)("br",{}),"This is useful for cases where you wish to perform non-standard web development."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_OFFLINE"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Skip all network requests when applicable. This leads to faster development in areas with poor network connection."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_TYPESCRIPT_SETUP"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Prevents the CLI from forcing TypeScript to be configured on ",(0,t.jsx)(n.code,{children:"npx expo start"}),".",(0,t.jsx)("br",{}),"For more information, see ",(0,t.jsx)(n.a,{href:"/../../../../../../../guides/typescript",children:"TypeScript guide"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DEBUG=expo:*"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"string"})}),(0,t.jsxs)(n.td,{children:["Enables debug logs for the CLI, you can configure this using the ",(0,t.jsxs)(n.a,{href:"https://github.com/debug-js/debug#conventions",children:[(0,t.jsx)(n.code,{children:"debug"})," convention"]}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_DEBUG"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["An alias for ",(0,t.jsx)(n.code,{children:"DEBUG=expo:*"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_PROFILE"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Enable profiling stats for the CLI, this does not profile your application."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_CACHE"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Disable all global caching. By default, app config JSON schemas, Expo Go binaries for simulators and emulators, and project templates are cached in the global ",(0,t.jsx)(n.strong,{children:".expo"})," directory on your machine."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"CI"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["When enabled, the CLI will disable interactive functionality, skip optional prompts, and fail on non-optional prompts.",(0,t.jsx)("br",{}),"Example: ",(0,t.jsx)(n.code,{children:"CI=1 npx expo install --check"})," will fail if any installed packages are outdated."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_TELEMETRY"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Disables anonymous usage collection. ",(0,t.jsx)(n.a,{href:"/more/expo-cli/#telemetry",children:"Learn more about telemetry"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_GIT_STATUS"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Skips warning about git status during potentially dangerous actions like ",(0,t.jsx)(n.code,{children:"npx expo prebuild --clean"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_REDIRECT_PAGE"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Disables the redirect page for selecting an app, that shows when a user has ",(0,t.jsx)(n.code,{children:"expo-dev-client"})," installed, and starts the project with ",(0,t.jsx)(n.code,{children:"npx expo start"})," instead of ",(0,t.jsx)(n.code,{children:"npx expo start --dev-client"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_PUBLIC_FOLDER"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"string"})}),(0,t.jsxs)(n.td,{children:["Public directory path to use with Metro for web. ",(0,t.jsx)(n.a,{href:"/../../../../../../../guides/customizing-metro",children:"Learn more about customizing Metro"}),".",(0,t.jsx)("br",{}),"Default: ",(0,t.jsx)(n.code,{children:"public"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EDITOR"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"string"})}),(0,t.jsxs)(n.td,{children:["Name of the editor to open when pressing ",(0,t.jsx)(n.kbd,{children:"O"})," in the Terminal UI. This value is used across many command line tools."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_EDITOR"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"string"})}),(0,t.jsxs)(n.td,{children:["An Expo-specific version of the ",(0,t.jsx)(n.code,{children:"EDITOR"})," variable which takes higher priority when defined."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_IMAGE_UTILS_NO_SHARP"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Disable the usage of global Sharp CLI installation in favor of the slower Jimp package for image manipulation. This is used in places like ",(0,t.jsx)(n.code,{children:"npx expo prebuild"})," for generating app icons."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_TUNNEL_SUBDOMAIN"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"experimental"})}),"Disable using ",(0,t.jsx)(n.code,{children:"exp.direct"})," as the hostname for ",(0,t.jsx)(n.code,{children:"--tunnel"})," connections. This enables ",(0,t.jsx)(n.strong,{children:"https://"})," forwarding which can be used to test universal links on iOS. This may cause unexpected issues with ",(0,t.jsx)(n.code,{children:"expo-linking"})," and Expo Go. Select the exact subdomain to use by passing a ",(0,t.jsx)(n.code,{children:"string"})," value that is not one of: ",(0,t.jsx)(n.code,{children:"true"}),", ",(0,t.jsx)(n.code,{children:"false"}),", ",(0,t.jsx)(n.code,{children:"1"}),", ",(0,t.jsx)(n.code,{children:"0"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_METRO_NO_MAIN_FIELD_OVERRIDE"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Force Expo CLI to use the ",(0,t.jsx)(n.a,{href:"https://metrobundler.dev/docs/configuration/#resolvermainfields",children:(0,t.jsx)(n.code,{children:"resolver.resolverMainFields"})})," from the project's ",(0,t.jsx)(n.strong,{children:"metro.config.js"})," for all platforms. By default, Expo CLI will use ",(0,t.jsx)(n.code,{children:"['browser', 'module', 'main']"}),", which is the default for webpack, for the web and the user-defined main fields for other platforms."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.del,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_INSPECTOR_PROXY"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"deprecated"})}),"Disable the customized inspector proxy with improved support for the Chrome DevTools protocol.",(0,t.jsx)("br",{}),"This includes support for the network inspector."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_CLIENT_ENV_VARS"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Prevent inlining ",(0,t.jsx)(n.code,{children:"EXPO_PUBLIC_"})," environment variables in client bundles."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_DOTENV"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Prevent all ",(0,t.jsx)(n.code,{children:".env"})," file loading across Expo CLI."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_METRO_LAZY"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Prevent adding the ",(0,t.jsx)(n.code,{children:"lazy=true"})," query parameter to Metro URLs (",(0,t.jsx)(n.code,{children:"metro@0.76.3"})," and greater). This disables ",(0,t.jsx)(n.code,{children:"import()"})," support."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_USE_TYPED_ROUTES"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:["Use ",(0,t.jsx)(n.code,{children:"expo.experiments.typedRoutes"})," to enable statically typed routes in Expo Router."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.del,{children:(0,t.jsx)(n.code,{children:"EXPO_METRO_UNSTABLE_ERRORS"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"deprecated"})}),"Disable inverse dependency stack trace for Metro bundling errors. Enabled by default."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.del,{children:(0,t.jsx)(n.code,{children:"EXPO_USE_METRO_WORKSPACE_ROOT"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"deprecated",note:"SDK 52+"})}),"Enable auto server root detection for Metro. This will change the server root to the workspace root. Useful for monorepos."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_METRO_WORKSPACE_ROOT"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{note:"SDK 52+"})}),"Disable auto server root detection for Metro. Disabling will not change the server root to the workspace root. Enabling this is useful for monorepos."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.del,{children:(0,t.jsx)(n.code,{children:"EXPO_USE_UNSTABLE_DEBUGGER"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"deprecated",note:"SDK 52+"})}),"Enable the experimental debugger from React Native."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_ADB_USER"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"string"})}),(0,t.jsxs)(n.td,{children:["Set the ",(0,t.jsx)(n.code,{children:"user"})," number that should be passed to ",(0,t.jsx)(n.code,{children:"--user"})," with ADB commands. Used for installing APKs on Android devices with multiple profiles. Defaults to ",(0,t.jsx)(n.code,{children:"0"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_TELEMETRY_DETACH"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"SDK 51+"})}),"Send telemetry events in the main thread of ",(0,t.jsx)(n.code,{children:"@expo/cli"}),". This causes the CLI to slow down as it waits for all the events to be sent."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_USE_FAST_RESOLVER"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"SDK 51+"})}),"Enable an alternative module resolver for Metro. This may behave differently in some cases."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_UNSTABLE_ATLAS"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsxs)("div",{className:"flex items-center pb-1.5",children:[(0,t.jsx)(c.h,{status:"experimental"}),(0,t.jsx)(c.h,{status:"SDK 51+"})]}),"Gather Metro bundle information during development or export. Starting from SDK 53, this environment variable is deprecated in favor of ",(0,t.jsx)(n.code,{children:"EXPO_ATLAS"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_ATLAS"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"SDK 53+"})}),"Gather Metro bundle information during development or export."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_BUNDLE_SPLITTING"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsxs)("div",{className:"flex items-center pb-1.5",children:[(0,t.jsx)(c.h,{status:"experimental"}),(0,t.jsx)(c.h,{status:"SDK 51+"})]}),"Disable Metro splitting chunks on async imports in production (web-only)."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_USE_METRO_REQUIRE"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"SDK 52+"})}),"Enable the use of Expo's custom Metro ",(0,t.jsx)(n.code,{children:"require"})," implementation and ",(0,t.jsx)(n.code,{children:"string"})," based module IDs. This enables better debugging and deterministic IDs for React Server Components. Does not support legacy RAM bundles."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_UNSTABLE_METRO_OPTIMIZE_GRAPH"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsxs)("div",{className:"flex items-center pb-1.5",children:[(0,t.jsx)(c.h,{status:"experimental"}),(0,t.jsx)(c.h,{status:"SDK 52+"})]}),"Enable eager bundling where transformation runs uncached after the entire bundle has been created. This is required for production tree shaking and is less optimized for development bundling."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_UNSTABLE_TREE_SHAKING"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsxs)("div",{className:"flex items-center pb-1.5",children:[(0,t.jsx)(c.h,{status:"experimental"}),(0,t.jsx)(c.h,{status:"SDK 52+"})]}),"Enable unstable tree shaking support across all platforms. See ",(0,t.jsx)(n.a,{href:"/../../../../../../../guides/tree-shaking",children:"tree shaking"})," for more details."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_REACT_NATIVE_WEB"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsxs)("div",{className:"flex items-center pb-1.5",children:[(0,t.jsx)(c.h,{status:"experimental"}),(0,t.jsx)(c.h,{status:"SDK 52+"})]}),"Enable experimental mode where React Native Web isn't required to run Expo apps on web."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_NO_DEPENDENCY_VALIDATION"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("div",{className:"flex items-center pb-1.5",children:(0,t.jsx)(c.h,{status:"SDK 52+"})}),"Disable built-in dependency validation when installing packages through ",(0,t.jsx)(n.code,{children:"npx expo install"})," and ",(0,t.jsx)(n.code,{children:"npx expo start"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_WEB_DEV_HYDRATE"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Enable React hydration in development for a web project. This can help you identify hydration issues early."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EXPO_UNSTABLE_LIVE_BINDINGS"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsxs)("div",{className:"flex items-center pb-1.5",children:[(0,t.jsx)(c.h,{status:"experimental"}),(0,t.jsx)(c.h,{status:"SDK 54+"})]}),"Disable live binding in experimental import export support. Enabled by default. Live bindings improve circular dependencies support, but can lead to slightly worse performance."]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"telemetry",children:"Telemetry"}),"\n",(0,t.jsxs)(n.p,{children:["Expo dev tools collect anonymous data about general usage. This helps us know when a feature is not working as expected. Telemetry is completely optional, you can opt out by using the ",(0,t.jsx)(n.code,{children:"EXPO_NO_TELEMETRY=1"})," environment variable."]})]})}function p(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}i()}catch(e){i(e)}})},37683:(e,n,s)=>{"use strict";s.d(n,{C:()=>t,Z:()=>i});let i="https://snack.expo.dev";function t(e){let{templateId:n,code:s,files:i,baseURL:t,codeLanguage:r}=e,o={};return i&&Object.keys(i).forEach(e=>{let n=i[e];/\.(jsx?|tsx?|json|md)$/i.test(e)?o[e]={type:"CODE",url:/^https?:\/\//.test(n)?n:`${t}/${n}`}:o[e]={type:"ASSET",contents:n}}),n?"jsx"===r?o["App.js"]={type:"CODE",url:`${t}/${n}.js`}:o["App.tsx"]={type:"CODE",url:`${t}/${n}.tsx`}:s&&("jsx"===r?o["App.js"]={type:"CODE",contents:s}:o["App.tsx"]={type:"CODE",contents:s}),o}},65987:(e,n,s)=>{"use strict";s.d(n,{u:()=>d});var i=s(37876),t=s(66028),r=s(39949),o=s(97342),l=s(75298);function d(e){let{title:n,description:s,href:d,testID:c,Icon:a,imageUrl:h}=e,x=!!d?.startsWith("http"),p=x?o.ArrowUpRightIcon:r.ArrowRightIcon;return(0,i.jsxs)(t.LinkBase,{href:d,className:(0,t.mergeClasses)("group mb-3 flex flex-row justify-between rounded-md border border-solid border-default px-4 py-3 transition","hocus:bg-subtle hocus:shadow-xs"),openInNewTab:x,children:[(0,i.jsxs)("div",{className:"flex flex-row gap-4",children:[a&&(0,i.jsx)("div",{className:"flex h-9 min-w-[36px] items-center justify-center self-center rounded-md bg-element transition group-hover:bg-hover",children:(0,i.jsx)(a,{className:"icon-lg text-icon-default"})}),h&&(0,i.jsx)("img",{className:"!h-9 !w-9 self-center",src:h,alt:"Icon"}),(0,i.jsxs)("div",{className:"flex flex-col self-center",children:[(0,i.jsx)(l.M9,{children:n}),s&&(0,i.jsx)(l.Tk,{theme:"secondary",children:s})]})]}),(0,i.jsx)(p,{className:"ml-3 min-w-[20px] content-end self-center text-icon-secondary"})]})}},94275:(e,n,s)=>{"use strict";s.a(e,async(e,i)=>{try{s.d(n,{A3:()=>r.A,BK:()=>o.B,bk:()=>t.b});var t=s(19618),r=s(7759),o=s(19002),l=e([r]);r=(l.then?(await l)():l)[0],i()}catch(e){i(e)}})}},e=>{e.O(0,[55312,90636,46593,38792],()=>e(e.s=8900)),_N_E=e.O()}]);